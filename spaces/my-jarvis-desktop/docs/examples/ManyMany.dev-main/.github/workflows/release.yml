name: Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug environment variables
        env:
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        run: |
          echo "=== DEBUGGING SIGNING SETUP ==="
          echo "TAURI_SIGNING_PRIVATE_KEY length: ${#TAURI_SIGNING_PRIVATE_KEY}"
          echo "TAURI_SIGNING_PRIVATE_KEY_PASSWORD length: ${#TAURI_SIGNING_PRIVATE_KEY_PASSWORD}"
          echo "First 50 chars of key: ${TAURI_SIGNING_PRIVATE_KEY:0:50}..."
          echo "Key ends with: ...${TAURI_SIGNING_PRIVATE_KEY: -20}"
          echo "Password is set: $([ -n "$TAURI_SIGNING_PRIVATE_KEY_PASSWORD" ] && echo "YES" || echo "NO")"
          
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm install

      - name: Fix GitHub Actions newline issue with private key
        env:
          TAURI_SIGNING_PRIVATE_KEY_RAW: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
        run: |
          echo "=== FIXING GITHUB ACTIONS NEWLINE BUG ==="
          echo "Raw key length: ${#TAURI_SIGNING_PRIVATE_KEY_RAW}"
          
          # GitHub Actions automatically adds trailing newlines to secrets
          # This is a confirmed bug: https://github.com/actions/runner/issues/291
          # Solution: Strip newlines using echo -n and tr -d
          
          echo "Cleaning key by removing GitHub-added newlines AND embedded newlines..."
          
          # Step 1: Remove any GitHub-added trailing newlines from the base64 string
          TEMP_KEY=$(echo -n "$TAURI_SIGNING_PRIVATE_KEY_RAW" | tr -d '\n\r')
          echo "After removing external newlines: ${#TEMP_KEY} chars"
          
          # Step 2: Decode base64, remove internal newlines, re-encode
          echo "Decoding, stripping internal newlines, and re-encoding..."
          TAURI_SIGNING_PRIVATE_KEY=$(echo "$TEMP_KEY" | base64 -d | tr -d '\n\r' | base64 -w 0)
          echo "Final cleaned key length: ${#TAURI_SIGNING_PRIVATE_KEY}"
          echo "Key ends with: ...${TAURI_SIGNING_PRIVATE_KEY: -10}"
          
          # Verify the key is now properly formatted
          echo "=== VERIFICATION ==="
          echo "Final key length: ${#TAURI_SIGNING_PRIVATE_KEY} characters"
          
          # The key length will be different now since we removed internal newlines
          if [ ${#TAURI_SIGNING_PRIVATE_KEY} -lt 348 ]; then
            echo "✅ Key is shorter than original (newlines removed)"
          else
            echo "❌ Key length unchanged: ${#TAURI_SIGNING_PRIVATE_KEY}"
          fi
          
          # Test that the cleaned key can be base64 decoded
          echo "Testing base64 decode..."
          if echo "$TAURI_SIGNING_PRIVATE_KEY" | base64 -d >/dev/null 2>&1; then
            echo "✅ Key decodes successfully!"
          else
            echo "❌ Key decode failed - still has issues"
          fi
          
          # Test signing with the cleaned key
          echo "=== TESTING CLEANED KEY SIGNING ==="
          echo "$TAURI_SIGNING_PRIVATE_KEY" > /tmp/clean_signing_key.key
          echo "test signing content" > /tmp/test_sign.txt
          
          if npx tauri signer sign /tmp/test_sign.txt -f /tmp/clean_signing_key.key 2>&1; then
            echo "✅ SIGNING SUCCESSFUL WITH CLEANED KEY!"
            echo "GitHub Actions newline bug has been resolved"
          else
            echo "❌ Signing still failed - may need different approach"
          fi
          
          # Export the cleaned key for use in the build step
          echo "TAURI_SIGNING_PRIVATE_KEY=$TAURI_SIGNING_PRIVATE_KEY" >> $GITHUB_ENV
          
          # Clean up test files
          rm -f /tmp/clean_signing_key.key /tmp/test_sign.txt

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Use the cleaned private key from the previous step (no GitHub Actions newline bug)
          TAURI_SIGNING_PRIVATE_KEY: ${{ env.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'ManyMany.dev v__VERSION__'
          releaseBody: |
            ## Release v__VERSION__
            
            This release includes:
            - **Fixed GitHub Actions newline bug** affecting Tauri signing keys
            - Fresh Tauri-generated signing keys for proper updates
            - ARM64 macOS build with working auto-updater
            - Enhanced terminal and worktree management features
            
            **Technical details:**
            - Native Tauri v2 signing (no minisign compatibility issues)
            - Proper signature generation and latest.json creation
            - Version: __VERSION__
          releaseDraft: false
          prerelease: false
          args: --target aarch64-apple-darwin
          includeUpdaterJson: true